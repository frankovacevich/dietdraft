{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2f41e77e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"food-icon\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: \"/food/egg.svg\"\n})], -1 /* HOISTED */));\nconst _hoisted_2 = {\n  key: 0,\n  class: \"food-amount\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"food-item\", {\n      selected: $props.selected\n    }])\n  }, [_hoisted_1, $props.amount ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString($props.amount), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"food-name\", {\n      crossed: $props.crossed\n    }])\n  }, [_createElementVNode(\"span\", null, _toDisplayString($props.name), 1 /* TEXT */)], 2 /* CLASS */)], 2 /* CLASS */);\n}","map":{"version":3,"names":["_createElementVNode","class","src","key","_createElementBlock","_normalizeClass","selected","$props","_hoisted_1","amount","_hoisted_2","_toDisplayString","_createCommentVNode","crossed","name"],"sources":["/home/x/workspace/01-diet-draft/client/src/components/FoodItem.vue"],"sourcesContent":["<script>\nexport default {\n  data() {\n    return {\n      holdStartTimestamp: 0,\n    };\n  },\n\n  props: {\n    name: { type: String, default: \"Food name\" },\n    icon: { type: String, default: \"egg\" },\n    description: { type: String, default: \"\" },\n    protein: { type: Number, default: 0 },\n    fat: { type: Number, default: 0 },\n    carbs: { type: Number, default: 0 },\n    amount: { type: Number, default: undefined },\n    selected: { type: Boolean, default: false },\n    crossed: { type: Boolean, default: false },\n    editing: { type: Boolean, default: false },\n  },\n\n  computed: {\n    calories() {\n      return 9 * this.fat + 4 * this.protein + 4 * this.carbs;\n    },\n\n    resolveImg(image) {\n      return `./food/${image}.svg`;\n    },\n  },\n\n  methods: {\n    heldLongEnough() {\n      const now = new Date().getTime();\n      const holdThreshold = 500; // 500 milliseconds\n      return now - this.holdStartTimestamp > holdThreshold;\n    },\n\n    holdStart() {\n      this.holdStartTimestamp = new Date().getTime();\n    },\n\n    holdEnd() {\n      if (this.heldLongEnough()) {\n        this.$emit(\"hold\");\n      }\n    },\n  },\n};\n</script>\n\n<template>\n  <div class=\"food-item\" :class=\"{ selected: selected }\">\n    <div class=\"food-icon\">\n      <img src=\"/food/egg.svg\" />\n    </div>\n    <div v-if=\"amount\" class=\"food-amount\">\n      {{ amount }}\n    </div>\n    <div class=\"food-name\" :class=\"{ crossed: crossed }\">\n      <span>{{ name }}</span>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.food-item {\n  background-color: var(--color-gray-0);\n  border-radius: 8px;\n\n  width: 100%;\n  height: 36px;\n\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: stretch;\n  position: relative;\n  box-sizing: border-box;\n}\n\n.food-item.selected {\n  outline: 3px solid var(--color-primary);\n  outline-offset: -3px;\n}\n\n.food-name.crossed {\n  text-decoration: line-through;\n}\n\n.food-icon img {\n  width: 22px;\n  height: 22px;\n  padding: 8px;\n}\n</style>\n"],"mappings":";;gEAqDIA,mBAAA,CAEM;EAFDC,KAAK,EAAC;AAAW,I,aACpBD,mBAAA,CAA2B;EAAtBE,GAAG,EAAC;AAAe,G;;EAtD9BC,GAAA;EAwDuBF,KAAK,EAAC;;;uBAJ3BG,mBAAA,CAUM;IAVDH,KAAK,EApDZI,eAAA,EAoDa,WAAW;MAAAC,QAAA,EAAqBC,MAAA,CAAAD;IAAQ;MACjDE,UAEM,EACKD,MAAA,CAAAE,MAAM,I,cAAjBL,mBAAA,CAEM,OAFNM,UAEM,EAAAC,gBAAA,CADDJ,MAAA,CAAAE,MAAM,oBAzDfG,mBAAA,gBA2DIZ,mBAAA,CAEM;IAFDC,KAAK,EA3DdI,eAAA,EA2De,WAAW;MAAAQ,OAAA,EAAoBN,MAAA,CAAAM;IAAO;MAC/Cb,mBAAA,CAAuB,cAAAW,gBAAA,CAAdJ,MAAA,CAAAO,IAAI,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}