{"ast":null,"code":"import _defineProperty from \"/home/x/workspace/01-diet-draft/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { defineStore } from \"pinia\";\nimport { Calculator } from \"./calculator\";\n\n/*\nClasses\n*/\nexport class Food {\n  constructor() {\n    _defineProperty(this, \"id\", void 0);\n    _defineProperty(this, \"name\", void 0);\n    _defineProperty(this, \"icon\", void 0);\n    _defineProperty(this, \"description\", void 0);\n    _defineProperty(this, \"meals\", void 0);\n    _defineProperty(this, \"protein\", void 0);\n    _defineProperty(this, \"fat\", void 0);\n    _defineProperty(this, \"carbs\", void 0);\n    _defineProperty(this, \"amount\", void 0);\n    _defineProperty(this, \"selected\", void 0);\n  }\n}\nexport class PlanInfo {\n  constructor() {\n    _defineProperty(this, \"created\", void 0);\n    _defineProperty(this, \"protein\", void 0);\n    _defineProperty(this, \"fat\", void 0);\n    _defineProperty(this, \"carbs\", void 0);\n    _defineProperty(this, \"days\", void 0);\n    _defineProperty(this, \"calculationMethod\", void 0);\n    _defineProperty(this, \"calculationError\", void 0);\n  }\n}\nconst CalculationMethods = {\n  all: \"ALL\",\n  protein: \"PROTEIN\",\n  fat: \"FAT\",\n  carbs: \"CARBS\"\n};\nconst defaultPlanInfo = {\n  protein: 110,\n  fat: 105,\n  carbs: 100,\n  days: 1,\n  calculationMethod: CalculationMethods.all\n};\n\n/*\nStore\n*/\nexport const mainStore = defineStore(\"mainStore\", {\n  state: () => {\n    return {\n      allFoods: [],\n      planFoods: [],\n      planInfo: null,\n      day: 0,\n      editMode: false\n    };\n  },\n  getters: {\n    todaysFoods() {\n      return this.planFoods[this.day];\n    },\n    todaysQuantities() {\n      const total = {\n        protein: 0,\n        fat: 0,\n        carbs: 0\n      };\n      for (const food of this.planFoods[this.day]) {\n        total.protein += food.protein * (food.amount || 0);\n        total.fat += food.fat * (food.amount || 0);\n        total.carbs += food.carbs * (food.amount || 0);\n      }\n      return total;\n    },\n    allPlanQuantities() {\n      const total = {\n        protein: 0,\n        fat: 0,\n        carbs: 0\n      };\n      for (let day = 0; day < this.planFoods.length; day++) {\n        for (const food of this.planFoods[day]) {\n          total.protein += food.protein * (food.amount || 0);\n          total.fat += food.fat * (food.amount || 0);\n          total.carbs += food.carbs * (food.amount || 0);\n        }\n      }\n      return total;\n    },\n    calculator() {\n      const calculator = new Calculator();\n      calculator.allFoods = this.allFoods;\n      calculator.protein = this.planInfo.protein;\n      calculator.fat = this.planInfo.fat;\n      calculator.carbs = this.planInfo.carbs;\n      calculator.calculationMethod = this.planInfo.calculationMethod;\n      calculator.calculationError = this.planInfo.calculationError;\n      return calculator;\n    }\n  },\n  actions: {\n    save() {\n      localStorage.setItem(\"planFoods\", JSON.stringify(this.planFoods));\n      if (this.planInfo !== null) {\n        localStorage.setItem(\"planInfo\", JSON.stringify(this.planInfo));\n      }\n    },\n    load() {\n      const planInfo = localStorage.getItem(\"planInfo\");\n      if (planInfo) {\n        this.planInfo = JSON.parse(planInfo);\n      } else {\n        this.planInfo = {\n          ...defaultPlanInfo,\n          created: new Date().getTime()\n        };\n      }\n      const planFoods = localStorage.getItem(\"planFoods\");\n      if (planFoods && planFoods.length === this.planInfo.days) {\n        this.planFoods = planFoods;\n      } else {\n        this.planFoods = [];\n        for (let i = 0; i < this.planInfo.days; i++) {\n          this.planFoods.push([]);\n        }\n      }\n    },\n    async fetchData() {\n      const response = await fetch(\"/data.json\");\n      this.allFoods = await response.json();\n    },\n    goToPreviousDay() {\n      if (this.day === 0) {\n        return;\n      }\n      this.day--;\n    },\n    goToNextDay() {\n      if (this.day === this.planInfo.days - 1) {\n        return;\n      }\n      this.day++;\n    },\n    toggleEditMode() {\n      this.editMode = !this.editMode;\n    }\n  }\n});","map":{"version":3,"names":["defineStore","Calculator","Food","constructor","_defineProperty","PlanInfo","CalculationMethods","all","protein","fat","carbs","defaultPlanInfo","days","calculationMethod","mainStore","state","allFoods","planFoods","planInfo","day","editMode","getters","todaysFoods","todaysQuantities","total","food","amount","allPlanQuantities","length","calculator","calculationError","actions","save","localStorage","setItem","JSON","stringify","load","getItem","parse","created","Date","getTime","i","push","fetchData","response","fetch","json","goToPreviousDay","goToNextDay","toggleEditMode"],"sources":["/home/x/workspace/01-diet-draft/client/src/store.js"],"sourcesContent":["import { defineStore } from \"pinia\";\nimport { Calculator } from \"./calculator\";\n\n/*\nClasses\n*/\nexport class Food {\n  id;\n  name;\n  icon;\n  description;\n  meals;\n  protein;\n  fat;\n  carbs;\n  amount;\n  selected;\n}\n\nexport class PlanInfo {\n  created;\n  protein;\n  fat;\n  carbs;\n  days;\n  calculationMethod;\n  calculationError;\n}\n\nconst CalculationMethods = {\n  all: \"ALL\",\n  protein: \"PROTEIN\",\n  fat: \"FAT\",\n  carbs: \"CARBS\",\n};\n\nconst defaultPlanInfo = {\n  protein: 110,\n  fat: 105,\n  carbs: 100,\n  days: 1,\n  calculationMethod: CalculationMethods.all,\n};\n\n/*\nStore\n*/\nexport const mainStore = defineStore(\"mainStore\", {\n  state: () => {\n    return {\n      allFoods: [],\n      planFoods: [],\n      planInfo: null,\n      day: 0,\n      editMode: false,\n    };\n  },\n\n  getters: {\n    todaysFoods() {\n      return this.planFoods[this.day];\n    },\n\n    todaysQuantities() {\n      const total = { protein: 0, fat: 0, carbs: 0 };\n      for (const food of this.planFoods[this.day]) {\n        total.protein += food.protein * (food.amount || 0);\n        total.fat += food.fat * (food.amount || 0);\n        total.carbs += food.carbs * (food.amount || 0);\n      }\n      return total;\n    },\n\n    allPlanQuantities() {\n      const total = { protein: 0, fat: 0, carbs: 0 };\n      for (let day = 0; day < this.planFoods.length; day++) {\n        for (const food of this.planFoods[day]) {\n          total.protein += food.protein * (food.amount || 0);\n          total.fat += food.fat * (food.amount || 0);\n          total.carbs += food.carbs * (food.amount || 0);\n        }\n      }\n      return total;\n    },\n\n    calculator() {\n      const calculator = new Calculator();\n      calculator.allFoods = this.allFoods;\n      calculator.protein = this.planInfo.protein;\n      calculator.fat = this.planInfo.fat;\n      calculator.carbs = this.planInfo.carbs;\n      calculator.calculationMethod = this.planInfo.calculationMethod;\n      calculator.calculationError = this.planInfo.calculationError;\n      return calculator;\n    },\n  },\n\n  actions: {\n    save() {\n      localStorage.setItem(\"planFoods\", JSON.stringify(this.planFoods));\n\n      if (this.planInfo !== null) {\n        localStorage.setItem(\"planInfo\", JSON.stringify(this.planInfo));\n      }\n    },\n\n    load() {\n      const planInfo = localStorage.getItem(\"planInfo\");\n      if (planInfo) {\n        this.planInfo = JSON.parse(planInfo);\n      } else {\n        this.planInfo = { ...defaultPlanInfo, created: new Date().getTime() };\n      }\n\n      const planFoods = localStorage.getItem(\"planFoods\");\n      if (planFoods && planFoods.length === this.planInfo.days) {\n        this.planFoods = planFoods;\n      } else {\n        this.planFoods = [];\n        for (let i = 0; i < this.planInfo.days; i++) {\n          this.planFoods.push([]);\n        }\n      }\n    },\n\n    async fetchData() {\n      const response = await fetch(\"/data.json\");\n      this.allFoods = await response.json();\n    },\n\n    goToPreviousDay() {\n      if (this.day === 0) {\n        return;\n      }\n      this.day--;\n    },\n\n    goToNextDay() {\n      if (this.day === this.planInfo.days - 1) {\n        return;\n      }\n      this.day++;\n    },\n\n    toggleEditMode() {\n      this.editMode = !this.editMode;\n    },\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}