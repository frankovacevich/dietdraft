{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-69296c38\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"main-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, _toDisplayString($props.text), 1 /* TEXT */), _createElementVNode(\"div\", null, [_createElementVNode(\"span\", {\n    style: _normalizeStyle({\n      color: $options.displayColor\n    })\n  }, _toDisplayString($options.displayValue), 5 /* TEXT, STYLE */), _createTextVNode(\" / \" + _toDisplayString($options.displayTarget), 1 /* TEXT */)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$props","text","style","_normalizeStyle","color","$options","displayColor","displayValue","_createTextVNode","displayTarget"],"sources":["/home/x/workspace/01-diet-draft/client/src/components/TotalsBar.vue"],"sourcesContent":["<script>\nimport { getVariable } from \"@/main\";\n\nexport default {\n  props: {\n    text: { type: String, default: \"\" },\n    value: { type: Number, default: 0 },\n    target: { type: Number, default: 0 },\n  },\n\n  computed: {\n    valuePercentage() {\n      return this.target == 0 ? 0 : (100 * this.value) / this.target;\n    },\n\n    displayColor() {\n      if (this.valuePercentage < 85 || this.valuePercentage > 110) {\n        return getVariable(\"--color-danger\");\n      }\n      return getVariable(\"--color-text\");\n    },\n\n    displayValue() {\n      return this.value.toFixed();\n    },\n\n    displayTarget() {\n      return this.target.toFixed();\n    },\n  },\n};\n</script>\n\n<template>\n  <div class=\"main-container\">\n    <div>{{ text }}</div>\n    <div>\n      <span :style=\"{ color: displayColor }\">{{ displayValue }}</span> /\n      {{ displayTarget }}\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.main-container {\n  font-size: 10pt;\n  text-align: center;\n}\n</style>\n"],"mappings":";;;EAkCOA,KAAK,EAAC;AAAgB;;uBAA3BC,mBAAA,CAMM,OANNC,UAMM,GALJC,mBAAA,CAAqB,aAAAC,gBAAA,CAAbC,MAAA,CAAAC,IAAI,kBACZH,mBAAA,CAGM,cAFJA,mBAAA,CAAgE;IAAzDI,KAAK,EArClBC,eAAA;MAAAC,KAAA,EAqC6BC,QAAA,CAAAC;IAAY;sBAAOD,QAAA,CAAAE,YAAY,yBArC5DC,gBAAA,CAqCsE,KAChE,GAAAT,gBAAA,CAAGM,QAAA,CAAAI,aAAa,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}