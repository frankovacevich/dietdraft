{"ast":null,"code":"import _defineProperty from \"/home/x/workspace/01-diet-draft/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.array.push.js\";\n/*\n * Helper classes and enums\n */\n\nexport const CalculationMethods = {\n  all: \"ALL\",\n  protein: \"PROTEIN\",\n  fat: \"FAT\",\n  carbs: \"CARBS\",\n  calories: \"CALORIES\"\n};\n\n/*\n * Calculator class\n */\n\nexport class Calculator {\n  constructor() {\n    _defineProperty(this, \"allFoods\", void 0);\n    _defineProperty(this, \"targetProtein\", void 0);\n    _defineProperty(this, \"targetFat\", void 0);\n    _defineProperty(this, \"targetCarbs\", void 0);\n    _defineProperty(this, \"calculationMethod\", void 0);\n    _defineProperty(this, \"calculationError\", void 0);\n  }\n  get targetCalories() {\n    return this.targetProtein * 4 + this.targetCarbs * 4 + this.targetFat * 9;\n  }\n  getErrorFunction() {\n    switch (this.calculationMethod) {\n      case CalculationMethods.all:\n        return food => {\n          const e1 = food.protein - this.targetProtein;\n          const e2 = food.fat - this.targetFat;\n          const e3 = food.carbs - this.targetCarbs;\n          return e1 ** 2 + e2 ** 2 + e3 ** 2;\n        };\n      case CalculationMethods.protein:\n        return food => (food.protein - this.targetProtein) ** 2;\n      case CalculationMethods.fat:\n        return food => (food.fat - this.targetFat) ** 2;\n      case CalculationMethods.carbs:\n        return food => (food.carbs - this.targetCarbs) ** 2;\n      case CalculationMethods.calories:\n        return food => {\n          const calories = food.protein * 4 + food.carbs * 4 + food.fat * 9;\n          return (calories - this.targetCalories) ** 2;\n        };\n    }\n  }\n  calculateError(plan) {\n    plan.flat();\n    const errFunc = this.getErrorFunction();\n    return foods.reduce((sum, food) => sum + errFunc(food), 0);\n  }\n  createRandomPopulation() {\n    // Get foods per meal\n    const foodsPerMeal = [];\n    const meals = [\"b\", \"s\", \"l\", \"d\"];\n    for (const meal of meals) {\n      foodsPerMeal.push(this.allFoods.filter(food => food[meal]));\n    }\n\n    //\n    const plans = [];\n    for (let i = 0; i < this.STARTING_POPULATION; i++) {}\n  }\n  extinsionAndCrossover(plans) {}\n  calc() {\n    // 1. Create a random population\n    //\n    // 2. Cross breed\n  }\n  calculateDay() {\n    const Meals = [\"breakfast\", \"snack\", \"lunch\", \"dinner\"];\n    const day = [];\n    Meals.forEach(() => {\n      const subsample = getRandomSubsample(this.allFoods, 3);\n      for (const item of subsample) {\n        item.amount = 1;\n      }\n      day.push([...subsample]);\n    });\n    return day;\n  }\n  calculateDays(days) {\n    console.log(days);\n  }\n}\n\n/*\n * Helper function\n */\n//\n_defineProperty(Calculator, \"STARTING_POPULATION\", 100);\nfunction getRandomSubsample(originalList, sampleSize) {\n  if (sampleSize <= 0 || sampleSize > originalList.length) {\n    console.error(\"Invalid sample size\");\n    return [];\n  }\n\n  // Shuffle the original list using Fisher-Yates algorithm\n  const shuffledList = [...originalList];\n  for (let i = shuffledList.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shuffledList[i], shuffledList[j]] = [shuffledList[j], shuffledList[i]];\n  }\n\n  // Take the first 'sampleSize' elements from the shuffled list\n  const subsampledList = shuffledList.slice(0, sampleSize);\n  return subsampledList;\n}","map":{"version":3,"names":["CalculationMethods","all","protein","fat","carbs","calories","Calculator","constructor","_defineProperty","targetCalories","targetProtein","targetCarbs","targetFat","getErrorFunction","calculationMethod","food","e1","e2","e3","calculateError","plan","flat","errFunc","foods","reduce","sum","createRandomPopulation","foodsPerMeal","meals","meal","push","allFoods","filter","plans","i","STARTING_POPULATION","extinsionAndCrossover","calc","calculateDay","Meals","day","forEach","subsample","getRandomSubsample","item","amount","calculateDays","days","console","log","originalList","sampleSize","length","error","shuffledList","j","Math","floor","random","subsampledList","slice"],"sources":["/home/x/workspace/01-diet-draft/client/src/calculator.js"],"sourcesContent":["/*\n * Helper classes and enums\n */\n\nexport const CalculationMethods = {\n  all: \"ALL\",\n  protein: \"PROTEIN\",\n  fat: \"FAT\",\n  carbs: \"CARBS\",\n  calories: \"CALORIES\",\n};\n\n/*\n * Calculator class\n */\n\nexport class Calculator {\n  allFoods;\n  targetProtein;\n  targetFat;\n  targetCarbs;\n  calculationMethod;\n  calculationError;\n\n  //\n  static STARTING_POPULATION = 100;\n\n  constructor() {}\n\n  get targetCalories() {\n    return this.targetProtein * 4 + this.targetCarbs * 4 + this.targetFat * 9;\n  }\n\n  getErrorFunction() {\n    switch (this.calculationMethod) {\n      case CalculationMethods.all:\n        return (food) => {\n          const e1 = food.protein - this.targetProtein;\n          const e2 = food.fat - this.targetFat;\n          const e3 = food.carbs - this.targetCarbs;\n          return e1 ** 2 + e2 ** 2 + e3 ** 2;\n        };\n      case CalculationMethods.protein:\n        return (food) => (food.protein - this.targetProtein) ** 2;\n      case CalculationMethods.fat:\n        return (food) => (food.fat - this.targetFat) ** 2;\n      case CalculationMethods.carbs:\n        return (food) => (food.carbs - this.targetCarbs) ** 2;\n      case CalculationMethods.calories:\n        return (food) => {\n          const calories = food.protein * 4 + food.carbs * 4 + food.fat * 9;\n          return (calories - this.targetCalories) ** 2;\n        };\n    }\n  }\n\n  calculateError(plan) {\n    plan.flat();\n    const errFunc = this.getErrorFunction();\n    return foods.reduce((sum, food) => sum + errFunc(food), 0);\n  }\n\n  createRandomPopulation() {\n    // Get foods per meal\n    const foodsPerMeal = [];\n    const meals = [\"b\", \"s\", \"l\", \"d\"];\n    for (const meal of meals) {\n      foodsPerMeal.push(this.allFoods.filter((food) => food[meal]));\n    }\n\n    //\n    const plans = [];\n    for (let i = 0; i < this.STARTING_POPULATION; i++) {}\n  }\n\n  extinsionAndCrossover(plans) {}\n\n  calc() {\n    // 1. Create a random population\n    //\n    // 2. Cross breed\n  }\n\n  calculateDay() {\n    const Meals = [\"breakfast\", \"snack\", \"lunch\", \"dinner\"];\n    const day = [];\n\n    Meals.forEach(() => {\n      const subsample = getRandomSubsample(this.allFoods, 3);\n      for (const item of subsample) {\n        item.amount = 1;\n      }\n      day.push([...subsample]);\n    });\n\n    return day;\n  }\n\n  calculateDays(days) {\n    console.log(days);\n  }\n}\n\n/*\n * Helper function\n */\n\nfunction getRandomSubsample(originalList, sampleSize) {\n  if (sampleSize <= 0 || sampleSize > originalList.length) {\n    console.error(\"Invalid sample size\");\n    return [];\n  }\n\n  // Shuffle the original list using Fisher-Yates algorithm\n  const shuffledList = [...originalList];\n  for (let i = shuffledList.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shuffledList[i], shuffledList[j]] = [shuffledList[j], shuffledList[i]];\n  }\n\n  // Take the first 'sampleSize' elements from the shuffled list\n  const subsampledList = shuffledList.slice(0, sampleSize);\n\n  return subsampledList;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}