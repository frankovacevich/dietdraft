{"ast":null,"code":"import _defineProperty from \"/home/x/workspace/01-diet-draft/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.array.push.js\";\nfunction getRandomSubsample(originalList, sampleSize) {\n  if (sampleSize <= 0 || sampleSize > originalList.length) {\n    console.error(\"Invalid sample size\");\n    return [];\n  }\n\n  // Shuffle the original list using Fisher-Yates algorithm\n  const shuffledList = [...originalList];\n  for (let i = shuffledList.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shuffledList[i], shuffledList[j]] = [shuffledList[j], shuffledList[i]];\n  }\n\n  // Take the first 'sampleSize' elements from the shuffled list\n  const subsampledList = shuffledList.slice(0, sampleSize);\n  return subsampledList;\n}\nexport const CalculationMethods = {\n  all: \"ALL\",\n  protein: \"PROTEIN\",\n  fat: \"FAT\",\n  carbs: \"CARBS\",\n  calories: \"CALORIES\"\n};\nexport class Calculator {\n  constructor() {\n    _defineProperty(this, \"allFoods\", void 0);\n    _defineProperty(this, \"protein\", void 0);\n    _defineProperty(this, \"fat\", void 0);\n    _defineProperty(this, \"carbs\", void 0);\n    _defineProperty(this, \"calculationMethod\", void 0);\n    _defineProperty(this, \"calculationError\", void 0);\n  }\n  calculateError(foods, calculationError) {}\n  calculateDay() {\n    const Meals = [\"breakfast\", \"snack\", \"lunch\", \"dinner\"];\n    const day = [];\n    Meals.forEach(() => {\n      const subsample = getRandomSubsample(this.allFoods, 3);\n      for (const item of subsample) {\n        item.amount = 1;\n      }\n      day.push([...subsample]);\n    });\n    return day;\n  }\n  calculateDays(days) {\n    console.log(days);\n  }\n}","map":{"version":3,"names":["getRandomSubsample","originalList","sampleSize","length","console","error","shuffledList","i","j","Math","floor","random","subsampledList","slice","CalculationMethods","all","protein","fat","carbs","calories","Calculator","constructor","_defineProperty","calculateError","foods","calculationError","calculateDay","Meals","day","forEach","subsample","allFoods","item","amount","push","calculateDays","days","log"],"sources":["/home/x/workspace/01-diet-draft/client/src/calculator.js"],"sourcesContent":["function getRandomSubsample(originalList, sampleSize) {\n  if (sampleSize <= 0 || sampleSize > originalList.length) {\n    console.error(\"Invalid sample size\");\n    return [];\n  }\n\n  // Shuffle the original list using Fisher-Yates algorithm\n  const shuffledList = [...originalList];\n  for (let i = shuffledList.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shuffledList[i], shuffledList[j]] = [shuffledList[j], shuffledList[i]];\n  }\n\n  // Take the first 'sampleSize' elements from the shuffled list\n  const subsampledList = shuffledList.slice(0, sampleSize);\n\n  return subsampledList;\n}\n\nexport const CalculationMethods = {\n  all: \"ALL\",\n  protein: \"PROTEIN\",\n  fat: \"FAT\",\n  carbs: \"CARBS\",\n  calories: \"CALORIES\",\n};\n\nexport class Calculator {\n  allFoods;\n  protein;\n  fat;\n  carbs;\n  calculationMethod;\n  calculationError;\n\n  constructor() {}\n\n  calculateError(foods, calculationError) {}\n\n  calculateDay() {\n    const Meals = [\"breakfast\", \"snack\", \"lunch\", \"dinner\"];\n    const day = [];\n\n    Meals.forEach(() => {\n      const subsample = getRandomSubsample(this.allFoods, 3);\n      for (const item of subsample) {\n        item.amount = 1;\n      }\n      day.push([...subsample]);\n    });\n\n    return day;\n  }\n\n  calculateDays(days) {\n    console.log(days);\n  }\n}\n"],"mappings":";;AAAA,SAASA,kBAAkBA,CAACC,YAAY,EAAEC,UAAU,EAAE;EACpD,IAAIA,UAAU,IAAI,CAAC,IAAIA,UAAU,GAAGD,YAAY,CAACE,MAAM,EAAE;IACvDC,OAAO,CAACC,KAAK,CAAC,qBAAqB,CAAC;IACpC,OAAO,EAAE;EACX;;EAEA;EACA,MAAMC,YAAY,GAAG,CAAC,GAAGL,YAAY,CAAC;EACtC,KAAK,IAAIM,CAAC,GAAGD,YAAY,CAACH,MAAM,GAAG,CAAC,EAAEI,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAChD,MAAMC,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIJ,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7C,CAACD,YAAY,CAACC,CAAC,CAAC,EAAED,YAAY,CAACE,CAAC,CAAC,CAAC,GAAG,CAACF,YAAY,CAACE,CAAC,CAAC,EAAEF,YAAY,CAACC,CAAC,CAAC,CAAC;EACzE;;EAEA;EACA,MAAMK,cAAc,GAAGN,YAAY,CAACO,KAAK,CAAC,CAAC,EAAEX,UAAU,CAAC;EAExD,OAAOU,cAAc;AACvB;AAEA,OAAO,MAAME,kBAAkB,GAAG;EAChCC,GAAG,EAAE,KAAK;EACVC,OAAO,EAAE,SAAS;EAClBC,GAAG,EAAE,KAAK;EACVC,KAAK,EAAE,OAAO;EACdC,QAAQ,EAAE;AACZ,CAAC;AAED,OAAO,MAAMC,UAAU,CAAC;EAQtBC,WAAWA,CAAA,EAAG;IAAAC,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA;EAAC;EAEfC,cAAcA,CAACC,KAAK,EAAEC,gBAAgB,EAAE,CAAC;EAEzCC,YAAYA,CAAA,EAAG;IACb,MAAMC,KAAK,GAAG,CAAC,WAAW,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,CAAC;IACvD,MAAMC,GAAG,GAAG,EAAE;IAEdD,KAAK,CAACE,OAAO,CAAC,MAAM;MAClB,MAAMC,SAAS,GAAG9B,kBAAkB,CAAC,IAAI,CAAC+B,QAAQ,EAAE,CAAC,CAAC;MACtD,KAAK,MAAMC,IAAI,IAAIF,SAAS,EAAE;QAC5BE,IAAI,CAACC,MAAM,GAAG,CAAC;MACjB;MACAL,GAAG,CAACM,IAAI,CAAC,CAAC,GAAGJ,SAAS,CAAC,CAAC;IAC1B,CAAC,CAAC;IAEF,OAAOF,GAAG;EACZ;EAEAO,aAAaA,CAACC,IAAI,EAAE;IAClBhC,OAAO,CAACiC,GAAG,CAACD,IAAI,CAAC;EACnB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}