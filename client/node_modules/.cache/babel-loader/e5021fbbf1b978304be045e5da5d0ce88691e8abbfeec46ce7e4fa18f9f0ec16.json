{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, unref as _unref, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelSelect as _vModelSelect, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-475645dd\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"flex-grow\": \"1\"\n  }\n}, null, -1));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", null, \"Plan\", -1));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"flex-grow\": \"1\"\n  }\n}, null, -1));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"title-bar-icon-hidden\"\n}, null, -1));\nconst _hoisted_5 = {\n  class: \"summary-table\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"td\"), /*#__PURE__*/_createElementVNode(\"td\", null, \"Protein\"), /*#__PURE__*/_createElementVNode(\"td\", null, \"Fat\"), /*#__PURE__*/_createElementVNode(\"td\", null, \"Carbs\"), /*#__PURE__*/_createElementVNode(\"td\", null, \"Calories\")], -1));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"td\", null, \"Averages\", -1));\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"td\", null, \"%\", -1));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"td\", null, \"Target\", -1));\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"td\", null, \"%\", -1));\nconst _hoisted_11 = {\n  class: \"more-options-div\"\n};\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", null, \"Days:\", -1));\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", null, \"Optimize:\", -1));\nconst _hoisted_14 = [\"value\"];\nimport TitleBar from \"@/components/TitleBar.vue\";\nimport MainContainer from \"@/components/MainContainer.vue\";\nimport { mainStore } from \"@/store\";\nimport { CalculationMethods } from \"@/calculator\";\nexport default {\n  __name: 'PlanView',\n  setup(__props) {\n    const store = mainStore();\n    return (_ctx, _cache) => {\n      const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\");\n      return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(TitleBar, null, {\n        default: _withCtx(() => [_createElementVNode(\"div\", {\n          class: \"title-bar-icon\",\n          onClick: _cache[0] || (_cache[0] = $event => this.$router.push('/menu'))\n        }, [_createVNode(_component_font_awesome_icon, {\n          icon: \"fa-solid fa-arrow-left\"\n        })]), _hoisted_1, _hoisted_2, _hoisted_3, _hoisted_4]),\n        _: 1\n      }), _createVNode(MainContainer, null, {\n        default: _withCtx(() => [_createElementVNode(\"table\", _hoisted_5, [_hoisted_6, _createElementVNode(\"tr\", null, [_hoisted_7, _createElementVNode(\"td\", null, _toDisplayString(_unref(store).planFoodsAverages.protein.toFixed()), 1), _createElementVNode(\"td\", null, _toDisplayString(_unref(store).planFoodsAverages.fat.toFixed()), 1), _createElementVNode(\"td\", null, _toDisplayString(_unref(store).planFoodsAverages.carbs.toFixed()), 1), _createElementVNode(\"td\", null, _toDisplayString(_unref(store).planFoodsAverages.calories.toFixed()), 1)]), _createElementVNode(\"tr\", null, [_hoisted_8, _createElementVNode(\"td\", null, _toDisplayString(_unref(store).planFoodsAveragesPercentages.protein) + \"%\", 1), _createElementVNode(\"td\", null, _toDisplayString(_unref(store).planFoodsAveragesPercentages.fat) + \"%\", 1), _createElementVNode(\"td\", null, _toDisplayString(_unref(store).planFoodsAveragesPercentages.carbs) + \"%\", 1), _createElementVNode(\"td\", null, _toDisplayString(_unref(store).planFoodsAveragesPercentages.calories) + \"%\", 1)]), _createElementVNode(\"tr\", null, [_hoisted_9, _createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"input\", {\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _unref(store).planInfoInput.protein = $event),\n          type: \"number\",\n          min: \"0\",\n          max: \"300\"\n        }, null, 512), [[_vModelText, _unref(store).planInfoInput.protein]])]), _createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"input\", {\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _unref(store).planInfoInput.fat = $event),\n          type: \"number\",\n          min: \"0\",\n          max: \"300\"\n        }, null, 512), [[_vModelText, _unref(store).planInfoInput.fat]])]), _createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"input\", {\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _unref(store).planInfoInput.carbs = $event),\n          type: \"number\",\n          min: \"0\",\n          max: \"300\"\n        }, null, 512), [[_vModelText, _unref(store).planInfoInput.carbs]])]), _createElementVNode(\"td\", null, _toDisplayString(_unref(store).planInfoInput.calories), 1)]), _createElementVNode(\"tr\", null, [_hoisted_10, _createElementVNode(\"td\", null, _toDisplayString(_unref(store).planInfoInput.percentages.protein) + \"%\", 1), _createElementVNode(\"td\", null, _toDisplayString(_unref(store).planInfoInput.percentages.fat) + \"%\", 1), _createElementVNode(\"td\", null, _toDisplayString(_unref(store).planInfoInput.percentages.carbs) + \"%\", 1), _createElementVNode(\"td\", null, _toDisplayString(_unref(store).planInfoInput.percentages.calories) + \"%\", 1)])]), _createElementVNode(\"div\", _hoisted_11, [_hoisted_12, _withDirectives(_createElementVNode(\"input\", {\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _unref(store).planInfoInput.days = $event),\n          min: \"0\",\n          max: \"31\",\n          type: \"number\"\n        }, null, 512), [[_vModelText, _unref(store).planInfoInput.days]]), _hoisted_13, _withDirectives(_createElementVNode(\"select\", {\n          \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _unref(store).planInfoInput.calculationMethod = $event),\n          style: {\n            \"flex-grow\": \"1\",\n            \"max-width\": \"none\"\n          }\n        }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(CalculationMethods), option => {\n          return _openBlock(), _createElementBlock(\"option\", {\n            key: option,\n            value: option\n          }, _toDisplayString(option), 9, _hoisted_14);\n        }), 128))], 512), [[_vModelSelect, _unref(store).planInfoInput.calculationMethod]])]), _createElementVNode(\"div\", {\n          class: \"button\",\n          onClick: _cache[6] || (_cache[6] = $event => _unref(store).generateNewPlan())\n        }, [_createVNode(_component_font_awesome_icon, {\n          icon: \"fa-solid fa-rotate-right\",\n          spin: _unref(store).calculating\n        }, null, 8, [\"spin\"]), _createTextVNode(\" Generate \")])]),\n        _: 1\n      })], 64);\n    };\n  }\n};","map":{"version":3,"names":["TitleBar","MainContainer","mainStore","CalculationMethods","store"],"sources":["/home/x/workspace/diet-draft/client/src/views/PlanView.vue"],"sourcesContent":["<script setup>\nimport TitleBar from \"@/components/TitleBar.vue\";\nimport MainContainer from \"@/components/MainContainer.vue\";\nimport { mainStore } from \"@/store\";\nimport { CalculationMethods } from \"@/calculator\";\nconst store = mainStore();\n</script>\n\n<template>\n  <TitleBar>\n    <div class=\"title-bar-icon\" @click=\"this.$router.push('/menu')\">\n      <font-awesome-icon icon=\"fa-solid fa-arrow-left\" />\n    </div>\n    <div style=\"flex-grow: 1\"></div>\n    <div>Plan</div>\n    <div style=\"flex-grow: 1\"></div>\n    <div class=\"title-bar-icon-hidden\"></div>\n  </TitleBar>\n  <MainContainer>\n    <table class=\"summary-table\">\n      <tr>\n        <td></td>\n        <td>Protein</td>\n        <td>Fat</td>\n        <td>Carbs</td>\n        <td>Calories</td>\n      </tr>\n      <tr>\n        <td>Averages</td>\n        <td>{{ store.planFoodsAverages.protein.toFixed() }}</td>\n        <td>{{ store.planFoodsAverages.fat.toFixed() }}</td>\n        <td>{{ store.planFoodsAverages.carbs.toFixed() }}</td>\n        <td>{{ store.planFoodsAverages.calories.toFixed() }}</td>\n      </tr>\n      <tr>\n        <td>%</td>\n        <td>{{ store.planFoodsAveragesPercentages.protein }}%</td>\n        <td>{{ store.planFoodsAveragesPercentages.fat }}%</td>\n        <td>{{ store.planFoodsAveragesPercentages.carbs }}%</td>\n        <td>{{ store.planFoodsAveragesPercentages.calories }}%</td>\n      </tr>\n      <tr>\n        <td>Target</td>\n        <td>\n          <input\n            v-model=\"store.planInfoInput.protein\"\n            type=\"number\"\n            min=\"0\"\n            max=\"300\"\n          />\n        </td>\n        <td>\n          <input\n            v-model=\"store.planInfoInput.fat\"\n            type=\"number\"\n            min=\"0\"\n            max=\"300\"\n          />\n        </td>\n        <td>\n          <input\n            v-model=\"store.planInfoInput.carbs\"\n            type=\"number\"\n            min=\"0\"\n            max=\"300\"\n          />\n        </td>\n        <td>{{ store.planInfoInput.calories }}</td>\n      </tr>\n      <tr>\n        <td>%</td>\n        <td>{{ store.planInfoInput.percentages.protein }}%</td>\n        <td>{{ store.planInfoInput.percentages.fat }}%</td>\n        <td>{{ store.planInfoInput.percentages.carbs }}%</td>\n        <td>{{ store.planInfoInput.percentages.calories }}%</td>\n      </tr>\n    </table>\n\n    <div class=\"more-options-div\">\n      <div>Days:</div>\n      <input\n        v-model=\"store.planInfoInput.days\"\n        min=\"0\"\n        max=\"31\"\n        type=\"number\"\n      />\n      <div>Optimize:</div>\n      <select\n        v-model=\"store.planInfoInput.calculationMethod\"\n        style=\"flex-grow: 1; max-width: none\"\n      >\n        <option\n          v-for=\"option in CalculationMethods\"\n          :key=\"option\"\n          :value=\"option\"\n        >\n          {{ option }}\n        </option>\n      </select>\n    </div>\n\n    <div class=\"button\" @click=\"store.generateNewPlan()\">\n      <font-awesome-icon\n        icon=\"fa-solid fa-rotate-right\"\n        :spin=\"store.calculating\"\n      />\n      Generate\n    </div>\n  </MainContainer>\n</template>\n\n<style scoped>\ninput,\nselect {\n  background-color: var(--color-gray-1);\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  width: 50%;\n  max-width: 50px;\n  text-align: center;\n  padding: 5px;\n}\n\n.more-options-div {\n  display: flex;\n  align-items: center;\n  margin-top: 10px;\n  gap: 10px;\n}\n\n.button {\n  border-radius: 5px;\n  background-color: var(--color-primary);\n  padding: 12px;\n  margin-top: 10px;\n  text-align: center;\n}\n\n.button:active {\n  background-color: var(--color-primary-active);\n}\n\n.summary-table {\n  border: none;\n  border-collapse: collapse;\n  width: 100%;\n}\n\n.summary-table td {\n  height: 35px;\n}\n\n.summary-table td:first-child {\n  width: 20%;\n  font-weight: bold;\n}\n\n.summary-table tr:nth-child(1) td,\n.summary-table tr:nth-child(3) td,\n.summary-table tr:nth-child(5) td {\n  border-bottom: 1px solid;\n}\n\n.summary-table td:not(:first-child) {\n  width: 20%;\n  text-align: center;\n}\n</style>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAOA,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,SAASC,SAAS,QAAQ,SAAS;AACnC,SAASC,kBAAkB,QAAQ,cAAc;;;;IACjD,MAAMC,KAAK,GAAGF,SAAS,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}