{"ast":null,"code":"import { mainStore } from \"@/store\";\nconst __default__ = {\n  data() {\n    return {\n      holdStartTimestamp: 0\n    };\n  },\n  props: {\n    name: {\n      type: String,\n      default: \"Food name\"\n    },\n    icon: {\n      type: String,\n      default: \"egg\"\n    },\n    description: {\n      type: String,\n      default: \"\"\n    },\n    protein: {\n      type: Number,\n      default: 0\n    },\n    fat: {\n      type: Number,\n      default: 0\n    },\n    carbs: {\n      type: Number,\n      default: 0\n    },\n    amount: {\n      type: Number,\n      default: undefined\n    },\n    selected: {\n      type: Boolean,\n      default: false\n    },\n    crossed: {\n      type: Boolean,\n      default: false\n    },\n    editing: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    calories() {\n      return 9 * this.fat + 4 * this.protein + 4 * this.carbs;\n    },\n    displayName() {\n      return this.name.charAt(0).toUpperCase() + this.name.slice(1);\n    },\n    displayQuantity() {\n      switch (this.store.selectedQuantity) {\n        case \"calories\":\n          return this.calo;\n      }\n    }\n  },\n  methods: {\n    resolveImg(image) {\n      return `/food/${image}.svg`;\n    },\n    heldLongEnough() {\n      const now = new Date().getTime();\n      const holdThreshold = 500; // 500 milliseconds\n      return now - this.holdStartTimestamp > holdThreshold;\n    },\n    holdStart() {\n      this.holdStartTimestamp = new Date().getTime();\n    },\n    holdEnd() {\n      if (this.heldLongEnough()) {\n        this.$emit(\"hold\");\n      }\n    },\n    bodyClick() {\n      this.$emit(\"bodyClick\");\n    },\n    amountClick() {\n      this.$emit(\"amountClick\");\n    }\n  }\n};\nexport default /*#__PURE__*/Object.assign(__default__, {\n  __name: 'FoodItem',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = mainStore();\n    const __returned__ = {\n      store,\n      get mainStore() {\n        return mainStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n});","map":{"version":3,"names":["mainStore","__default__","data","holdStartTimestamp","props","name","type","String","default","icon","description","protein","Number","fat","carbs","amount","undefined","selected","Boolean","crossed","editing","computed","calories","displayName","charAt","toUpperCase","slice","displayQuantity","store","selectedQuantity","calo","methods","resolveImg","image","heldLongEnough","now","Date","getTime","holdThreshold","holdStart","holdEnd","$emit","bodyClick","amountClick"],"sources":["/home/x/workspace/01-diet-draft/client/src/components/FoodItem.vue"],"sourcesContent":["<script setup>\nimport { mainStore } from \"@/store\";\nconst store = mainStore();\n</script>\n\n<script>\nexport default {\n  data() {\n    return {\n      holdStartTimestamp: 0,\n    };\n  },\n\n  props: {\n    name: { type: String, default: \"Food name\" },\n    icon: { type: String, default: \"egg\" },\n    description: { type: String, default: \"\" },\n    protein: { type: Number, default: 0 },\n    fat: { type: Number, default: 0 },\n    carbs: { type: Number, default: 0 },\n    amount: { type: Number, default: undefined },\n    selected: { type: Boolean, default: false },\n    crossed: { type: Boolean, default: false },\n    editing: { type: Boolean, default: false },\n  },\n\n  computed: {\n    calories() {\n      return 9 * this.fat + 4 * this.protein + 4 * this.carbs;\n    },\n\n    displayName() {\n      return this.name.charAt(0).toUpperCase() + this.name.slice(1);\n    },\n\n    displayQuantity() {\n      switch (this.store.selectedQuantity) {\n        case \"calories\":\n          return this.calo;\n      }\n    },\n  },\n\n  methods: {\n    resolveImg(image) {\n      return `/food/${image}.svg`;\n    },\n\n    heldLongEnough() {\n      const now = new Date().getTime();\n      const holdThreshold = 500; // 500 milliseconds\n      return now - this.holdStartTimestamp > holdThreshold;\n    },\n\n    holdStart() {\n      this.holdStartTimestamp = new Date().getTime();\n    },\n\n    holdEnd() {\n      if (this.heldLongEnough()) {\n        this.$emit(\"hold\");\n      }\n    },\n\n    bodyClick() {\n      this.$emit(\"bodyClick\");\n    },\n\n    amountClick() {\n      this.$emit(\"amountClick\");\n    },\n  },\n};\n</script>\n\n<template>\n  <div class=\"food-item\" :class=\"{ selected: selected }\" @click=\"bodyClick()\">\n    <div class=\"food-icon\" :class=\"{ crossed: crossed }\">\n      <img :src=\"resolveImg(icon)\" />\n    </div>\n    <div class=\"food-name\" :class=\"{ crossed: crossed }\">\n      <span>{{ displayName }}</span>\n    </div>\n    <div style=\"flex-grow: 1\"></div>\n    <div class=\"food-amount\" @click=\"amountClick()\">\n      <span>{{ amount }}</span>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.food-item {\n  background-color: var(--color-gray-0);\n  border-radius: 8px;\n\n  width: 100%;\n  height: 30px;\n\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: stretch;\n  position: relative;\n  box-sizing: border-box;\n\n  margin-bottom: 5px;\n}\n\n.food-item.selected {\n  outline: 3px solid var(--color-primary);\n  outline-offset: -3px;\n}\n\n.food-name.crossed {\n  text-decoration: line-through;\n}\n\n.food-icon img {\n  width: 18px;\n  height: 18px;\n  padding: 6px;\n}\n\n.food-icon.crossed {\n  filter: grayscale(1);\n}\n\n.food-amount {\n  border-radius: 5px;\n  padding: 4px 6px;\n  background-color: var(--color-gray-1);\n  margin-right: 4px;\n}\n</style>\n"],"mappings":"AACA,SAASA,SAAS,QAAQ,SAAS;AAKnC,MAAAC,WAAA,GAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,kBAAkB,EAAE;IACtB,CAAC;EACH,CAAC;EAEDC,KAAK,EAAE;IACLC,IAAI,EAAE;MAAEC,IAAI,EAAEC,MAAM;MAAEC,OAAO,EAAE;IAAY,CAAC;IAC5CC,IAAI,EAAE;MAAEH,IAAI,EAAEC,MAAM;MAAEC,OAAO,EAAE;IAAM,CAAC;IACtCE,WAAW,EAAE;MAAEJ,IAAI,EAAEC,MAAM;MAAEC,OAAO,EAAE;IAAG,CAAC;IAC1CG,OAAO,EAAE;MAAEL,IAAI,EAAEM,MAAM;MAAEJ,OAAO,EAAE;IAAE,CAAC;IACrCK,GAAG,EAAE;MAAEP,IAAI,EAAEM,MAAM;MAAEJ,OAAO,EAAE;IAAE,CAAC;IACjCM,KAAK,EAAE;MAAER,IAAI,EAAEM,MAAM;MAAEJ,OAAO,EAAE;IAAE,CAAC;IACnCO,MAAM,EAAE;MAAET,IAAI,EAAEM,MAAM;MAAEJ,OAAO,EAAEQ;IAAU,CAAC;IAC5CC,QAAQ,EAAE;MAAEX,IAAI,EAAEY,OAAO;MAAEV,OAAO,EAAE;IAAM,CAAC;IAC3CW,OAAO,EAAE;MAAEb,IAAI,EAAEY,OAAO;MAAEV,OAAO,EAAE;IAAM,CAAC;IAC1CY,OAAO,EAAE;MAAEd,IAAI,EAAEY,OAAO;MAAEV,OAAO,EAAE;IAAM;EAC3C,CAAC;EAEDa,QAAQ,EAAE;IACRC,QAAQA,CAAA,EAAG;MACT,OAAO,CAAC,GAAG,IAAI,CAACT,GAAG,GAAG,CAAC,GAAG,IAAI,CAACF,OAAO,GAAG,CAAC,GAAG,IAAI,CAACG,KAAK;IACzD,CAAC;IAEDS,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAAClB,IAAI,CAACmB,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAG,IAAI,CAACpB,IAAI,CAACqB,KAAK,CAAC,CAAC,CAAC;IAC/D,CAAC;IAEDC,eAAeA,CAAA,EAAG;MAChB,QAAQ,IAAI,CAACC,KAAK,CAACC,gBAAgB;QACjC,KAAK,UAAU;UACb,OAAO,IAAI,CAACC,IAAI;MACpB;IACF;EACF,CAAC;EAEDC,OAAO,EAAE;IACPC,UAAUA,CAACC,KAAK,EAAE;MAChB,OAAQ,SAAQA,KAAM,MAAK;IAC7B,CAAC;IAEDC,cAAcA,CAAA,EAAG;MACf,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;MAChC,MAAMC,aAAa,GAAG,GAAG,CAAC,CAAC;MAC3B,OAAOH,GAAG,GAAG,IAAI,CAAChC,kBAAkB,GAAGmC,aAAa;IACtD,CAAC;IAEDC,SAASA,CAAA,EAAG;MACV,IAAI,CAACpC,kBAAkB,GAAG,IAAIiC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;IAChD,CAAC;IAEDG,OAAOA,CAAA,EAAG;MACR,IAAI,IAAI,CAACN,cAAc,CAAC,CAAC,EAAE;QACzB,IAAI,CAACO,KAAK,CAAC,MAAM,CAAC;MACpB;IACF,CAAC;IAEDC,SAASA,CAAA,EAAG;MACV,IAAI,CAACD,KAAK,CAAC,WAAW,CAAC;IACzB,CAAC;IAEDE,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACF,KAAK,CAAC,aAAa,CAAC;IAC3B;EACF;AACF,CAAC;;;;;;;IAtED,MAAMb,KAAK,GAAG5B,SAAS,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}