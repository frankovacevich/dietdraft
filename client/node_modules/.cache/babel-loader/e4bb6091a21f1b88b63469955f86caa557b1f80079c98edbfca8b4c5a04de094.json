{"ast":null,"code":"import _defineProperty from \"/home/x/workspace/01-diet-draft/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { defineStore } from \"pinia\";\nimport { Calculator } from \"./calculator\";\n\n/*\nClasses\n*/\nexport class Food {\n  constructor() {\n    _defineProperty(this, \"id\", void 0);\n    _defineProperty(this, \"name\", void 0);\n    _defineProperty(this, \"icon\", void 0);\n    _defineProperty(this, \"description\", void 0);\n    _defineProperty(this, \"protein\", void 0);\n    _defineProperty(this, \"fat\", void 0);\n    _defineProperty(this, \"carbs\", void 0);\n    _defineProperty(this, \"amount\", void 0);\n    _defineProperty(this, \"meal\", void 0);\n    _defineProperty(this, \"category\", void 0);\n    _defineProperty(this, \"selected\", void 0);\n  }\n}\nexport class PlanInfo {\n  constructor() {\n    _defineProperty(this, \"created\", void 0);\n    _defineProperty(this, \"protein\", void 0);\n    _defineProperty(this, \"fat\", void 0);\n    _defineProperty(this, \"carbs\", void 0);\n    _defineProperty(this, \"days\", void 0);\n    _defineProperty(this, \"calculationMethod\", void 0);\n    _defineProperty(this, \"calculationError\", void 0);\n  }\n}\nexport const Meals = [\"breakfast\", \"snack\", \"lunch\", \"dinner\"];\nconst CalculationMethods = {\n  all: \"ALL\",\n  protein: \"PROTEIN\",\n  fat: \"FAT\",\n  carbs: \"CARBS\"\n};\nconst defaultPlanInfo = {\n  protein: 110,\n  fat: 105,\n  carbs: 100,\n  days: 1,\n  calculationMethod: CalculationMethods.all\n};\n\n/*\nStore\n*/\nexport const mainStore = defineStore(\"mainStore\", {\n  state: () => {\n    return {\n      allFoods: [],\n      planFoods: [],\n      planInfo: null,\n      day: 0,\n      editMode: true,\n      selectedQuantity: \"calories\",\n      //\n      addFoodModalVisible: true,\n      addFoodModalMeal: 0\n    };\n  },\n  getters: {\n    todaysFoods() {\n      return this.planFoods[this.day];\n    },\n    todayIsFirstDay() {\n      return this.day === 0;\n    },\n    todayIsLastDay() {\n      return this.day === this.planInfo.days - 1;\n    },\n    todaysQuantities() {\n      const total = {\n        protein: 0,\n        fat: 0,\n        carbs: 0\n      };\n      for (const meal of this.todaysFoods) {\n        for (const food of meal) {\n          total.protein += food.protein * (food.amount || 0);\n          total.fat += food.fat * (food.amount || 0);\n          total.carbs += food.carbs * (food.amount || 0);\n        }\n      }\n      return total;\n    },\n    allPlanQuantities() {\n      const total = {\n        protein: 0,\n        fat: 0,\n        carbs: 0\n      };\n      for (let day = 0; day < this.planFoods.length; day++) {\n        for (const meal of this.planFoods[day]) {\n          for (const food of meal) {\n            total.protein += food.protein * (food.amount || 0);\n            total.fat += food.fat * (food.amount || 0);\n            total.carbs += food.carbs * (food.amount || 0);\n          }\n        }\n      }\n      return total;\n    },\n    calculator() {\n      const calculator = new Calculator();\n      calculator.allFoods = this.allFoods;\n      calculator.protein = this.planInfo.protein;\n      calculator.fat = this.planInfo.fat;\n      calculator.carbs = this.planInfo.carbs;\n      calculator.calculationMethod = this.planInfo.calculationMethod;\n      calculator.calculationError = this.planInfo.calculationError;\n      return calculator;\n    }\n  },\n  actions: {\n    save() {\n      localStorage.setItem(\"planFoods\", JSON.stringify(this.planFoods));\n      if (this.planInfo !== null) {\n        localStorage.setItem(\"planInfo\", JSON.stringify(this.planInfo));\n      }\n    },\n    load() {\n      const planInfo = localStorage.getItem(\"planInfo\");\n      if (planInfo) {\n        this.planInfo = JSON.parse(planInfo);\n      } else {\n        this.planInfo = {\n          ...defaultPlanInfo,\n          created: new Date().getTime()\n        };\n      }\n      const planFoods = localStorage.getItem(\"planFoods\");\n      if (planFoods) {\n        this.planFoods = JSON.parse(planFoods);\n        if (planFoods.length === this.planInfo.days) {\n          this.planFoods = undefined;\n        }\n      }\n      if (!planFoods) {\n        this.planFoods = [];\n        for (let i = 0; i < this.planInfo.days; i++) {\n          this.planFoods.push([]);\n          this.planFoods.push([]);\n          this.planFoods.push([]);\n          this.planFoods.push([]);\n        }\n      }\n    },\n    async fetchData() {\n      const response = await fetch(\"/data.json\");\n      this.allFoods = await response.json();\n    },\n    goToPreviousDay() {\n      if (!this.todayIsFirstDay) {\n        this.day--;\n      }\n    },\n    goToNextDay() {\n      if (!this.todayIsLastDay) {\n        this.day++;\n      }\n    },\n    toggleEditMode() {\n      this.editMode = !this.editMode;\n    },\n    recalculateToday() {\n      const foods = this.calculator.calculateDay();\n      this.planFoods[this.day] = foods;\n      this.save();\n    },\n    changeFoodSelected(food) {\n      food.selected = !food.selected;\n      this.save();\n    },\n    changeFoodAmount(food) {\n      const nextAmountMap = {\n        0.25: 0.5,\n        0.5: 0.75,\n        0.75: 1,\n        1: 1.25,\n        1.25: 1.5,\n        1.5: 0.25\n      };\n      food.amount = nextAmountMap[food.amount] || 1;\n    },\n    foodDragStart() {},\n    foodDragEnd() {\n      this.save();\n    },\n    showAddFoodModal(meal) {\n      this.addFoodModalMeal = meal;\n      this.addFoodModalVisible = true;\n    },\n    closeAddFoodModal(meal, foods) {\n      this.planFoods[this.day][meal].push(...foods);\n      this.addFoodModalVisible = false;\n    }\n  }\n});","map":{"version":3,"names":["defineStore","Calculator","Food","constructor","_defineProperty","PlanInfo","Meals","CalculationMethods","all","protein","fat","carbs","defaultPlanInfo","days","calculationMethod","mainStore","state","allFoods","planFoods","planInfo","day","editMode","selectedQuantity","addFoodModalVisible","addFoodModalMeal","getters","todaysFoods","todayIsFirstDay","todayIsLastDay","todaysQuantities","total","meal","food","amount","allPlanQuantities","length","calculator","calculationError","actions","save","localStorage","setItem","JSON","stringify","load","getItem","parse","created","Date","getTime","undefined","i","push","fetchData","response","fetch","json","goToPreviousDay","goToNextDay","toggleEditMode","recalculateToday","foods","calculateDay","changeFoodSelected","selected","changeFoodAmount","nextAmountMap","foodDragStart","foodDragEnd","showAddFoodModal","closeAddFoodModal"],"sources":["/home/x/workspace/01-diet-draft/client/src/store.js"],"sourcesContent":["import { defineStore } from \"pinia\";\nimport { Calculator } from \"./calculator\";\n\n/*\nClasses\n*/\nexport class Food {\n  id;\n  name;\n  icon;\n  description;\n  protein;\n  fat;\n  carbs;\n  amount;\n  meal;\n  category;\n  selected;\n}\n\nexport class PlanInfo {\n  created;\n  protein;\n  fat;\n  carbs;\n  days;\n  calculationMethod;\n  calculationError;\n}\n\nexport const Meals = [\"breakfast\", \"snack\", \"lunch\", \"dinner\"];\n\nconst CalculationMethods = {\n  all: \"ALL\",\n  protein: \"PROTEIN\",\n  fat: \"FAT\",\n  carbs: \"CARBS\",\n};\n\nconst defaultPlanInfo = {\n  protein: 110,\n  fat: 105,\n  carbs: 100,\n  days: 1,\n  calculationMethod: CalculationMethods.all,\n};\n\n/*\nStore\n*/\nexport const mainStore = defineStore(\"mainStore\", {\n  state: () => {\n    return {\n      allFoods: [],\n      planFoods: [],\n      planInfo: null,\n      day: 0,\n      editMode: true,\n      selectedQuantity: \"calories\",\n      //\n      addFoodModalVisible: true,\n      addFoodModalMeal: 0,\n    };\n  },\n\n  getters: {\n    todaysFoods() {\n      return this.planFoods[this.day];\n    },\n\n    todayIsFirstDay() {\n      return this.day === 0;\n    },\n\n    todayIsLastDay() {\n      return this.day === this.planInfo.days - 1;\n    },\n\n    todaysQuantities() {\n      const total = { protein: 0, fat: 0, carbs: 0 };\n      for (const meal of this.todaysFoods) {\n        for (const food of meal) {\n          total.protein += food.protein * (food.amount || 0);\n          total.fat += food.fat * (food.amount || 0);\n          total.carbs += food.carbs * (food.amount || 0);\n        }\n      }\n      return total;\n    },\n\n    allPlanQuantities() {\n      const total = { protein: 0, fat: 0, carbs: 0 };\n      for (let day = 0; day < this.planFoods.length; day++) {\n        for (const meal of this.planFoods[day]) {\n          for (const food of meal) {\n            total.protein += food.protein * (food.amount || 0);\n            total.fat += food.fat * (food.amount || 0);\n            total.carbs += food.carbs * (food.amount || 0);\n          }\n        }\n      }\n      return total;\n    },\n\n    calculator() {\n      const calculator = new Calculator();\n      calculator.allFoods = this.allFoods;\n      calculator.protein = this.planInfo.protein;\n      calculator.fat = this.planInfo.fat;\n      calculator.carbs = this.planInfo.carbs;\n      calculator.calculationMethod = this.planInfo.calculationMethod;\n      calculator.calculationError = this.planInfo.calculationError;\n      return calculator;\n    },\n  },\n\n  actions: {\n    save() {\n      localStorage.setItem(\"planFoods\", JSON.stringify(this.planFoods));\n\n      if (this.planInfo !== null) {\n        localStorage.setItem(\"planInfo\", JSON.stringify(this.planInfo));\n      }\n    },\n\n    load() {\n      const planInfo = localStorage.getItem(\"planInfo\");\n      if (planInfo) {\n        this.planInfo = JSON.parse(planInfo);\n      } else {\n        this.planInfo = { ...defaultPlanInfo, created: new Date().getTime() };\n      }\n\n      const planFoods = localStorage.getItem(\"planFoods\");\n      if (planFoods) {\n        this.planFoods = JSON.parse(planFoods);\n        if (planFoods.length === this.planInfo.days) {\n          this.planFoods = undefined;\n        }\n      }\n\n      if (!planFoods) {\n        this.planFoods = [];\n        for (let i = 0; i < this.planInfo.days; i++) {\n          this.planFoods.push([]);\n          this.planFoods.push([]);\n          this.planFoods.push([]);\n          this.planFoods.push([]);\n        }\n      }\n    },\n\n    async fetchData() {\n      const response = await fetch(\"/data.json\");\n      this.allFoods = await response.json();\n    },\n\n    goToPreviousDay() {\n      if (!this.todayIsFirstDay) {\n        this.day--;\n      }\n    },\n\n    goToNextDay() {\n      if (!this.todayIsLastDay) {\n        this.day++;\n      }\n    },\n\n    toggleEditMode() {\n      this.editMode = !this.editMode;\n    },\n\n    recalculateToday() {\n      const foods = this.calculator.calculateDay();\n      this.planFoods[this.day] = foods;\n      this.save();\n    },\n\n    changeFoodSelected(food) {\n      food.selected = !food.selected;\n      this.save();\n    },\n\n    changeFoodAmount(food) {\n      const nextAmountMap = {\n        0.25: 0.5,\n        0.5: 0.75,\n        0.75: 1,\n        1: 1.25,\n        1.25: 1.5,\n        1.5: 0.25,\n      };\n      food.amount = nextAmountMap[food.amount] || 1;\n    },\n\n    foodDragStart() {},\n\n    foodDragEnd() {\n      this.save();\n    },\n\n    showAddFoodModal(meal) {\n      this.addFoodModalMeal = meal;\n      this.addFoodModalVisible = true;\n    },\n\n    closeAddFoodModal(meal, foods) {\n      this.planFoods[this.day][meal].push(...foods);\n      this.addFoodModalVisible = false;\n    },\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}